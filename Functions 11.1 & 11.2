{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "03163706",
   "metadata": {},
   "source": [
    "# 11.1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bff78335",
   "metadata": {},
   "source": [
    "Return Keyword :  Return is a defult keyword in Python.Return keyword can be used to return values from a function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "af61de17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def kaleem(a,b):\n",
    "    c=a+b\n",
    "    return c\n",
    "kaleem(20,9)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e298972a",
   "metadata": {},
   "source": [
    "# 11.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "cea16087",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "20\n",
      "1-Add  2-sub  3-mul  4-div : 1\n",
      "30\n"
     ]
    }
   ],
   "source": [
    "def munna(num1,num2):\n",
    "    #print(\"1-Add  2-sub  3-mul  4-div\")\n",
    "    c=int(input(\"1-Add  2-sub  3-mul  4-div : \"))\n",
    "    if(c==1):\n",
    "        add()\n",
    "    elif(c==2):\n",
    "        sub()\n",
    "    elif(c==3):\n",
    "        mul()\n",
    "    elif(c==4):\n",
    "        div()\n",
    "    else:\n",
    "        print(\" Wrong Input\")\n",
    "        \n",
    "def add():\n",
    "    num3=num1+num2\n",
    "    print(num3)\n",
    "def sub():\n",
    "    num3=num1-num2\n",
    "    print(num3)\n",
    "def mul():\n",
    "    num3=num1*num2\n",
    "    print(num3)\n",
    "def div():\n",
    "    num3=num1//num2\n",
    "    print(num3)\n",
    "num1=int(input())\n",
    "num2=int(input())\n",
    "munna(num1,num2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "747e9f9c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
